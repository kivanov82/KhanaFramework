{
  "contractName": "BlockDamBondingCurveFunds",
  "abi": [
    {
      "constant": true,
      "inputs": [],
      "name": "getTokenAddress",
      "outputs": [
        {
          "name": "",
          "type": "address"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": false,
      "inputs": [
        {
          "name": "_amount",
          "type": "uint256"
        },
        {
          "name": "_account",
          "type": "address"
        }
      ],
      "name": "sendEth",
      "outputs": [],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [],
      "name": "contractEnabled",
      "outputs": [
        {
          "name": "",
          "type": "bool"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [],
      "name": "tokenContract",
      "outputs": [
        {
          "name": "",
          "type": "address"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": false,
      "inputs": [],
      "name": "emergencyStop",
      "outputs": [
        {
          "name": "",
          "type": "bool"
        }
      ],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "constant": false,
      "inputs": [],
      "name": "renounceOwnership",
      "outputs": [],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [],
      "name": "owner",
      "outputs": [
        {
          "name": "",
          "type": "address"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": false,
      "inputs": [
        {
          "name": "_tokenAddress",
          "type": "address"
        }
      ],
      "name": "setTokenContract",
      "outputs": [],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "constant": false,
      "inputs": [],
      "name": "resumeContract",
      "outputs": [
        {
          "name": "",
          "type": "bool"
        }
      ],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "constant": false,
      "inputs": [
        {
          "name": "_newOwner",
          "type": "address"
        }
      ],
      "name": "transferOwnership",
      "outputs": [],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "name": "_tokenAddress",
          "type": "address"
        }
      ],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "constructor"
    },
    {
      "payable": true,
      "stateMutability": "payable",
      "type": "fallback"
    },
    {
      "anonymous": false,
      "inputs": [],
      "name": "LogContractDisabled",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [],
      "name": "LogContractEnabled",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "name": "fromAccount",
          "type": "address"
        },
        {
          "indexed": true,
          "name": "oldAddress",
          "type": "address"
        },
        {
          "indexed": true,
          "name": "newAddress",
          "type": "address"
        }
      ],
      "name": "LogTokenContractChanged",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "name": "account",
          "type": "address"
        },
        {
          "indexed": false,
          "name": "amount",
          "type": "uint256"
        }
      ],
      "name": "LogFundingReceived",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "name": "amount",
          "type": "uint256"
        },
        {
          "indexed": true,
          "name": "account",
          "type": "address"
        }
      ],
      "name": "LogEthSent",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "name": "previousOwner",
          "type": "address"
        }
      ],
      "name": "OwnershipRenounced",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "name": "previousOwner",
          "type": "address"
        },
        {
          "indexed": true,
          "name": "newOwner",
          "type": "address"
        }
      ],
      "name": "OwnershipTransferred",
      "type": "event"
    }
  ],
  "bytecode": "0x608060405260018060146101000a81548160ff02191690831515021790555034801561002a57600080fd5b50604051602080610c778339810180604052810190808051906020019092919050505080336000806101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555080600160006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055508073ffffffffffffffffffffffffffffffffffffffff16600073ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff167f8e50965f27112954dcece2b6acec24689db20cd8a09e23837f4c5cf6bd6a29e860405160405180910390a45050610b25806101526000396000f3006080604052600436106100a4576000357c0100000000000000000000000000000000000000000000000000000000900463ffffffff16806310fe9ae81461010f578063343686021461016657806341b3a0d9146101b357806355a373d6146101e257806363a599a414610239578063715018a6146102685780638da5cb5b1461027f578063bbcd5bbe146102d6578063c4bc5da514610319578063f2fde38b14610348575b600160149054906101000a900460ff1615156100bf57600080fd5b3373ffffffffffffffffffffffffffffffffffffffff167fa62171d5d91ef8d6ea1299955555621ff3ce8e1989f099b5fbb5a67464da6b07346040518082815260200191505060405180910390a2005b34801561011b57600080fd5b5061012461038b565b604051808273ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200191505060405180910390f35b34801561017257600080fd5b506101b160048036038101908080359060200190929190803573ffffffffffffffffffffffffffffffffffffffff1690602001909291905050506103b5565b005b3480156101bf57600080fd5b506101c86104c5565b604051808215151515815260200191505060405180910390f35b3480156101ee57600080fd5b506101f76104d8565b604051808273ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200191505060405180910390f35b34801561024557600080fd5b5061024e6104fe565b604051808215151515815260200191505060405180910390f35b34801561027457600080fd5b5061027d61061c565b005b34801561028b57600080fd5b5061029461071e565b604051808273ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200191505060405180910390f35b3480156102e257600080fd5b50610317600480360381019080803573ffffffffffffffffffffffffffffffffffffffff169060200190929190505050610743565b005b34801561032557600080fd5b5061032e610896565b604051808215151515815260200191505060405180910390f35b34801561035457600080fd5b50610389600480360381019080803573ffffffffffffffffffffffffffffffffffffffff169060200190929190505050610998565b005b6000600160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16905090565b600160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff1614151561041157600080fd5b600160149054906101000a900460ff16151561042c57600080fd5b8073ffffffffffffffffffffffffffffffffffffffff166108fc839081150290604051600060405180830381858888f19350505050158015610472573d6000803e3d6000fd5b508073ffffffffffffffffffffffffffffffffffffffff167fdf5983565e1f67d7cfa297d3729a3e95ec39dc41c53cfaf9f92bf23e9ad589bd836040518082815260200191505060405180910390a25050565b600160149054906101000a900460ff1681565b600160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b6000600160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff1614806105a857506000809054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff16145b15156105b357600080fd5b600160149054906101000a900460ff1615156105ce57600080fd5b6000600160146101000a81548160ff0219169083151502179055507f687b37676ebe4283016bd9c65cf9b57739806755be23a2f5534d34a7ae915e8b60405160405180910390a16001905090565b6000809054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff1614151561067757600080fd5b6000809054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff167ff8df31144d9c2f0f6b59d69b8b98abd5459d07f2742c4df920b25aae33c6482060405160405180910390a260008060006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff160217905550565b6000809054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b60008060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff161415156107a057600080fd5b600160149054906101000a900460ff1615156107bb57600080fd5b600160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16905081600160006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055508173ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff167f8e50965f27112954dcece2b6acec24689db20cd8a09e23837f4c5cf6bd6a29e860405160405180910390a45050565b6000600160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff16148061094057506000809054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff16145b151561094b57600080fd5b60018060146101000a81548160ff0219169083151502179055507fa90445109fa4faeb8720a8d1c9cd6865d77479d2056b9d57fd176b58f572b41860405160405180910390a16001905090565b6000809054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff161415156109f357600080fd5b6109fc816109ff565b50565b600073ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff1614151515610a3b57600080fd5b8073ffffffffffffffffffffffffffffffffffffffff166000809054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff167f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e060405160405180910390a3806000806101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff160217905550505600a165627a7a723058202ce73e2f26fd2bea85aac5d150a9a88e4096111d9d7958fbabc560f36d4fae430029",
  "deployedBytecode": "0x6080604052600436106100a4576000357c0100000000000000000000000000000000000000000000000000000000900463ffffffff16806310fe9ae81461010f578063343686021461016657806341b3a0d9146101b357806355a373d6146101e257806363a599a414610239578063715018a6146102685780638da5cb5b1461027f578063bbcd5bbe146102d6578063c4bc5da514610319578063f2fde38b14610348575b600160149054906101000a900460ff1615156100bf57600080fd5b3373ffffffffffffffffffffffffffffffffffffffff167fa62171d5d91ef8d6ea1299955555621ff3ce8e1989f099b5fbb5a67464da6b07346040518082815260200191505060405180910390a2005b34801561011b57600080fd5b5061012461038b565b604051808273ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200191505060405180910390f35b34801561017257600080fd5b506101b160048036038101908080359060200190929190803573ffffffffffffffffffffffffffffffffffffffff1690602001909291905050506103b5565b005b3480156101bf57600080fd5b506101c86104c5565b604051808215151515815260200191505060405180910390f35b3480156101ee57600080fd5b506101f76104d8565b604051808273ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200191505060405180910390f35b34801561024557600080fd5b5061024e6104fe565b604051808215151515815260200191505060405180910390f35b34801561027457600080fd5b5061027d61061c565b005b34801561028b57600080fd5b5061029461071e565b604051808273ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200191505060405180910390f35b3480156102e257600080fd5b50610317600480360381019080803573ffffffffffffffffffffffffffffffffffffffff169060200190929190505050610743565b005b34801561032557600080fd5b5061032e610896565b604051808215151515815260200191505060405180910390f35b34801561035457600080fd5b50610389600480360381019080803573ffffffffffffffffffffffffffffffffffffffff169060200190929190505050610998565b005b6000600160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16905090565b600160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff1614151561041157600080fd5b600160149054906101000a900460ff16151561042c57600080fd5b8073ffffffffffffffffffffffffffffffffffffffff166108fc839081150290604051600060405180830381858888f19350505050158015610472573d6000803e3d6000fd5b508073ffffffffffffffffffffffffffffffffffffffff167fdf5983565e1f67d7cfa297d3729a3e95ec39dc41c53cfaf9f92bf23e9ad589bd836040518082815260200191505060405180910390a25050565b600160149054906101000a900460ff1681565b600160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b6000600160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff1614806105a857506000809054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff16145b15156105b357600080fd5b600160149054906101000a900460ff1615156105ce57600080fd5b6000600160146101000a81548160ff0219169083151502179055507f687b37676ebe4283016bd9c65cf9b57739806755be23a2f5534d34a7ae915e8b60405160405180910390a16001905090565b6000809054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff1614151561067757600080fd5b6000809054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff167ff8df31144d9c2f0f6b59d69b8b98abd5459d07f2742c4df920b25aae33c6482060405160405180910390a260008060006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff160217905550565b6000809054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b60008060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff161415156107a057600080fd5b600160149054906101000a900460ff1615156107bb57600080fd5b600160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16905081600160006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055508173ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff167f8e50965f27112954dcece2b6acec24689db20cd8a09e23837f4c5cf6bd6a29e860405160405180910390a45050565b6000600160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff16148061094057506000809054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff16145b151561094b57600080fd5b60018060146101000a81548160ff0219169083151502179055507fa90445109fa4faeb8720a8d1c9cd6865d77479d2056b9d57fd176b58f572b41860405160405180910390a16001905090565b6000809054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff161415156109f357600080fd5b6109fc816109ff565b50565b600073ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff1614151515610a3b57600080fd5b8073ffffffffffffffffffffffffffffffffffffffff166000809054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff167f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e060405160405180910390a3806000806101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff160217905550505600a165627a7a723058202ce73e2f26fd2bea85aac5d150a9a88e4096111d9d7958fbabc560f36d4fae430029",
  "sourceMap": "463:146:0:-;;;501:4:2;471:34;;;;;;;;;;;;;;;;;;;;525:82:0;8:9:-1;5:2;;;30:1;27;20:12;5:2;525:82:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;578:13;575:10:6;567:5;;:18;;;;;;;;;;;;;;;;;;1757:13:2;1741;;:29;;;;;;;;;;;;;;;;;;1833:13;1785:62;;1829:1;1785:62;;1809:10;1785:62;;;;;;;;;;;;1689:165;525:82:0;463:146;;;;;;",
  "deployedSourceMap": "463:146:0:-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1062:15:2;;;;;;;;;;;1054:24;;;;;;;;2354:10;2335:41;;;2366:9;2335:41;;;;;;;;;;;;;;;;;;463:146:0;4146:94:2;;8:9:-1;5:2;;;30:1;27;20:12;5:2;4146:94:2;;;;;;;;;;;;;;;;;;;;;;;;;;;2728:182;;8:9:-1;5:2;;;30:1;27;20:12;5:2;2728:182:2;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;471:34;;8:9:-1;5:2;;;30:1;27;20:12;5:2;471:34:2;;;;;;;;;;;;;;;;;;;;;;;;;;;437:28;;8:9:-1;5:2;;;30:1;27;20:12;5:2;437:28:2;;;;;;;;;;;;;;;;;;;;;;;;;;;3534:187;;8:9:-1;5:2;;;30:1;27;20:12;5:2;3534:187:2;;;;;;;;;;;;;;;;;;;;;;;;;;;1001:111:6;;8:9:-1;5:2;;;30:1;27;20:12;5:2;1001:111:6;;;;;;238:20;;8:9:-1;5:2;;;30:1;27;20:12;5:2;238:20:6;;;;;;;;;;;;;;;;;;;;;;;;;;;3112:251:2;;8:9:-1;5:2;;;30:1;27;20:12;5:2;3112:251:2;;;;;;;;;;;;;;;;;;;;;;;;;;;;3839:168;;8:9:-1;5:2;;;30:1;27;20:12;5:2;3839:168:2;;;;;;;;;;;;;;;;;;;;;;;;;;;1274:103:6;;8:9:-1;5:2;;;30:1;27;20:12;5:2;1274:103:6;;;;;;;;;;;;;;;;;;;;;;;;;;;;4146:94:2;4194:7;4220:13;;;;;;;;;;;4213:20;;4146:94;:::o;2728:182::-;1248:13;;;;;;;;;;;1234:27;;:10;:27;;;1226:36;;;;;;;;1062:15;;;;;;;;;;;1054:24;;;;;;;;2833:8;:17;;:26;2851:7;2833:26;;;;;;;;;;;;;;;;;;;;;;;;8:9:-1;5:2;;;45:16;42:1;39;24:38;77:16;74:1;67:27;5:2;2833:26:2;2894:8;2874:29;;;2885:7;2874:29;;;;;;;;;;;;;;;;;;2728:182;;:::o;471:34::-;;;;;;;;;;;;;:::o;437:28::-;;;;;;;;;;;;;:::o;3534:187::-;3618:4;1448:13;;;;;;;;;;;1434:27;;:10;:27;;;:50;;;;1479:5;;;;;;;;;;;1465:19;;:10;:19;;;1434:50;1426:59;;;;;;;;1062:15;;;;;;;;;;;1054:24;;;;;;;;3652:5;3634:15;;:23;;;;;;;;;;;;;;;;;;3672:21;;;;;;;;;;3710:4;3703:11;;3534:187;:::o;1001:111:6:-;719:5;;;;;;;;;;;705:19;;:10;:19;;;697:28;;;;;;;;1077:5;;;;;;;;;;;1058:25;;;;;;;;;;;;1105:1;1089:5;;:18;;;;;;;;;;;;;;;;;;1001:111::o;238:20::-;;;;;;;;;;;;;:::o;3112:251:2:-;3206:18;719:5:6;;;;;;;;;;;705:19;;:10;:19;;;697:28;;;;;;;;1062:15:2;;;;;;;;;;;1054:24;;;;;;;;3227:13;;;;;;;;;;;3206:34;;3266:13;3250;;:29;;;;;;;;;;;;;;;;;;3342:13;3294:62;;3330:10;3294:62;;3318:10;3294:62;;;;;;;;;;;;3112:251;;:::o;3839:168::-;3906:4;1448:13;;;;;;;;;;;1434:27;;:10;:27;;;:50;;;;1479:5;;;;;;;;;;;1465:19;;:10;:19;;;1434:50;1426:59;;;;;;;;3940:4;3922:15;;:22;;;;;;;;;;;;;;;;;;3959:20;;;;;;;;;;3996:4;3989:11;;3839:168;:::o;1274:103:6:-;719:5;;;;;;;;;;;705:19;;:10;:19;;;697:28;;;;;;;;1343:29;1362:9;1343:18;:29::i;:::-;1274:103;:::o;1512:171::-;1603:1;1582:23;;:9;:23;;;;1574:32;;;;;;;;1645:9;1617:38;;1638:5;;;;;;;;;;;1617:38;;;;;;;;;;;;1669:9;1661:5;;:17;;;;;;;;;;;;;;;;;;1512:171;:::o",
  "source": "pragma solidity ^0.4.24;\n\nimport \"../BondingCurveFunds.sol\";\n\n/**\n * @title Proof of Concept contract for the Funds contract for BlockDam community\n * @author David Truong <david@truong.vc>\n * @dev This contract is meant to ONLY hold and send ETH funds (or maybe an\n * alternative token in the future). This is to isolate funds from logic and\n * increase safety and upgradability.\n * For more information, see: https://www.meetup.com/Permissionless-Society/\n */\n\ncontract BlockDamBondingCurveFunds is BondingCurveFunds {\n    constructor(address _tokenAddress) BondingCurveFunds(_tokenAddress) public {\n    }\n}\n",
  "sourcePath": "/Users/kirilivanov/DEV/KhanaFramework/Khana POC/contracts/BlockDam/BlockDamBondingCurveFunds.sol",
  "ast": {
    "absolutePath": "/Users/kirilivanov/DEV/KhanaFramework/Khana POC/contracts/BlockDam/BlockDamBondingCurveFunds.sol",
    "exportedSymbols": {
      "BlockDamBondingCurveFunds": [
        14
      ]
    },
    "id": 15,
    "nodeType": "SourceUnit",
    "nodes": [
      {
        "id": 1,
        "literals": [
          "solidity",
          "^",
          "0.4",
          ".24"
        ],
        "nodeType": "PragmaDirective",
        "src": "0:24:0"
      },
      {
        "absolutePath": "/Users/kirilivanov/DEV/KhanaFramework/Khana POC/contracts/BondingCurveFunds.sol",
        "file": "../BondingCurveFunds.sol",
        "id": 2,
        "nodeType": "ImportDirective",
        "scope": 15,
        "sourceUnit": 224,
        "src": "26:34:0",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "baseContracts": [
          {
            "arguments": null,
            "baseName": {
              "contractScope": null,
              "id": 3,
              "name": "BondingCurveFunds",
              "nodeType": "UserDefinedTypeName",
              "referencedDeclaration": 223,
              "src": "501:17:0",
              "typeDescriptions": {
                "typeIdentifier": "t_contract$_BondingCurveFunds_$223",
                "typeString": "contract BondingCurveFunds"
              }
            },
            "id": 4,
            "nodeType": "InheritanceSpecifier",
            "src": "501:17:0"
          }
        ],
        "contractDependencies": [
          223,
          1034
        ],
        "contractKind": "contract",
        "documentation": "@title Proof of Concept contract for the Funds contract for BlockDam community\n@author David Truong <david@truong.vc>\n@dev This contract is meant to ONLY hold and send ETH funds (or maybe an\nalternative token in the future). This is to isolate funds from logic and\nincrease safety and upgradability.\nFor more information, see: https://www.meetup.com/Permissionless-Society/",
        "fullyImplemented": true,
        "id": 14,
        "linearizedBaseContracts": [
          14,
          223,
          1034
        ],
        "name": "BlockDamBondingCurveFunds",
        "nodeType": "ContractDefinition",
        "nodes": [
          {
            "body": {
              "id": 12,
              "nodeType": "Block",
              "src": "600:7:0",
              "statements": []
            },
            "documentation": null,
            "id": 13,
            "implemented": true,
            "isConstructor": true,
            "isDeclaredConst": false,
            "modifiers": [
              {
                "arguments": [
                  {
                    "argumentTypes": null,
                    "id": 9,
                    "name": "_tokenAddress",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 6,
                    "src": "578:13:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  }
                ],
                "id": 10,
                "modifierName": {
                  "argumentTypes": null,
                  "id": 8,
                  "name": "BondingCurveFunds",
                  "nodeType": "Identifier",
                  "overloadedDeclarations": [],
                  "referencedDeclaration": 223,
                  "src": "560:17:0",
                  "typeDescriptions": {
                    "typeIdentifier": "t_type$_t_contract$_BondingCurveFunds_$223_$",
                    "typeString": "type(contract BondingCurveFunds)"
                  }
                },
                "nodeType": "ModifierInvocation",
                "src": "560:32:0"
              }
            ],
            "name": "",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 7,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 6,
                  "name": "_tokenAddress",
                  "nodeType": "VariableDeclaration",
                  "scope": 13,
                  "src": "537:21:0",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 5,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "537:7:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "536:23:0"
            },
            "payable": false,
            "returnParameters": {
              "id": 11,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "600:0:0"
            },
            "scope": 14,
            "src": "525:82:0",
            "stateMutability": "nonpayable",
            "superFunction": null,
            "visibility": "public"
          }
        ],
        "scope": 15,
        "src": "463:146:0"
      }
    ],
    "src": "0:610:0"
  },
  "legacyAST": {
    "absolutePath": "/Users/kirilivanov/DEV/KhanaFramework/Khana POC/contracts/BlockDam/BlockDamBondingCurveFunds.sol",
    "exportedSymbols": {
      "BlockDamBondingCurveFunds": [
        14
      ]
    },
    "id": 15,
    "nodeType": "SourceUnit",
    "nodes": [
      {
        "id": 1,
        "literals": [
          "solidity",
          "^",
          "0.4",
          ".24"
        ],
        "nodeType": "PragmaDirective",
        "src": "0:24:0"
      },
      {
        "absolutePath": "/Users/kirilivanov/DEV/KhanaFramework/Khana POC/contracts/BondingCurveFunds.sol",
        "file": "../BondingCurveFunds.sol",
        "id": 2,
        "nodeType": "ImportDirective",
        "scope": 15,
        "sourceUnit": 224,
        "src": "26:34:0",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "baseContracts": [
          {
            "arguments": null,
            "baseName": {
              "contractScope": null,
              "id": 3,
              "name": "BondingCurveFunds",
              "nodeType": "UserDefinedTypeName",
              "referencedDeclaration": 223,
              "src": "501:17:0",
              "typeDescriptions": {
                "typeIdentifier": "t_contract$_BondingCurveFunds_$223",
                "typeString": "contract BondingCurveFunds"
              }
            },
            "id": 4,
            "nodeType": "InheritanceSpecifier",
            "src": "501:17:0"
          }
        ],
        "contractDependencies": [
          223,
          1034
        ],
        "contractKind": "contract",
        "documentation": "@title Proof of Concept contract for the Funds contract for BlockDam community\n@author David Truong <david@truong.vc>\n@dev This contract is meant to ONLY hold and send ETH funds (or maybe an\nalternative token in the future). This is to isolate funds from logic and\nincrease safety and upgradability.\nFor more information, see: https://www.meetup.com/Permissionless-Society/",
        "fullyImplemented": true,
        "id": 14,
        "linearizedBaseContracts": [
          14,
          223,
          1034
        ],
        "name": "BlockDamBondingCurveFunds",
        "nodeType": "ContractDefinition",
        "nodes": [
          {
            "body": {
              "id": 12,
              "nodeType": "Block",
              "src": "600:7:0",
              "statements": []
            },
            "documentation": null,
            "id": 13,
            "implemented": true,
            "isConstructor": true,
            "isDeclaredConst": false,
            "modifiers": [
              {
                "arguments": [
                  {
                    "argumentTypes": null,
                    "id": 9,
                    "name": "_tokenAddress",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 6,
                    "src": "578:13:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  }
                ],
                "id": 10,
                "modifierName": {
                  "argumentTypes": null,
                  "id": 8,
                  "name": "BondingCurveFunds",
                  "nodeType": "Identifier",
                  "overloadedDeclarations": [],
                  "referencedDeclaration": 223,
                  "src": "560:17:0",
                  "typeDescriptions": {
                    "typeIdentifier": "t_type$_t_contract$_BondingCurveFunds_$223_$",
                    "typeString": "type(contract BondingCurveFunds)"
                  }
                },
                "nodeType": "ModifierInvocation",
                "src": "560:32:0"
              }
            ],
            "name": "",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 7,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 6,
                  "name": "_tokenAddress",
                  "nodeType": "VariableDeclaration",
                  "scope": 13,
                  "src": "537:21:0",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 5,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "537:7:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "536:23:0"
            },
            "payable": false,
            "returnParameters": {
              "id": 11,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "600:0:0"
            },
            "scope": 14,
            "src": "525:82:0",
            "stateMutability": "nonpayable",
            "superFunction": null,
            "visibility": "public"
          }
        ],
        "scope": 15,
        "src": "463:146:0"
      }
    ],
    "src": "0:610:0"
  },
  "compiler": {
    "name": "solc",
    "version": "0.4.24+commit.e67f0147.Emscripten.clang"
  },
  "networks": {},
  "schemaVersion": "3.0.0-beta.0",
  "updatedAt": "2018-10-11T19:41:29.064Z"
}